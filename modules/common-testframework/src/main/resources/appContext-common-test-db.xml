<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	
	<bean id="mwPropertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/hibernate-test.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>
	
<!--    <bean id="mwDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="${hibernate.connection.driver_class}" />
      <property name="url" value="${hibernate.connection.url}" />
      <property name="username" value="${hibernate.connection.username}" />
      <property name="password" value="${hibernate.connection.password}" />
   </bean>
   
   <bean id="mwSpyDataSource" class="com.p6spy.engine.spy.P6DataSource">
      <constructor-arg>
         <ref bean="dataSource"  />
      </constructor-arg>
   </bean>
   				   
   <!-- org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean de.mw.mwdata.core.db.OfdbSessionFactory -->   								   
   <!-- Spring 4 / Hibernate 4: http://stackoverflow.com/questions/24672619/springhibernate-vs-hibernate-configuration-cause-of-unsupportedoperationexcept -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">   
      <property name="dataSource" ref="mwSpyDataSource" />
      <property name="packagesToScan" value="de.mw.mwdata.core.domain, de.mw.mwdata.ofdb.domain.impl"></property>
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
            
            <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
            <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
            
            <prop key="hibernate.connection.username">${hibernate.connection.username}</prop>
            <prop key="hibernate.connection.password">${hibernate.connection.password}</prop>
         </props>
      </property>
      
      
   </bean>
   
<!--    <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate"> -->
   <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg><ref bean="mwSpyDataSource"/></constructor-arg>
	</bean> 
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mwSpyDataSource" />
    </bean>
	
    <tx:annotation-driven transaction-manager="transactionManager" />

	<!-- FxBooleanType, FxEnumType -->
    <context:component-scan base-package="de.mw.mwdata.core.db" />
    <!-- TypeZEITTYP -->
    <context:component-scan base-package="de.mw.mwdata.ofdb.domain.impl" />
    <context:component-scan base-package="de.mw.mwdata.ofdb.domain.enums" />   
    	
</beans>   